[{"path":"https://nicholasdavies.github.io/inshiny/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 inshiny authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nick Davies. Author, maintainer.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davies N (2025). inshiny: Compact Inline Widgets 'shiny' Apps. R package version 0.1.0.9000, https://github.com/nicholasdavies/inshiny.","code":"@Manual{,   title = {inshiny: Compact Inline Widgets for 'shiny' Apps},   author = {Nick Davies},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://github.com/nicholasdavies/inshiny}, }"},{"path":"https://nicholasdavies.github.io/inshiny/index.html","id":"inshiny-compact-inline-widgets-for-shiny-apps","dir":"","previous_headings":"","what":"Compact Inline Widgets for shiny Apps","title":"Compact Inline Widgets for shiny Apps","text":"inshiny provides basic set compact widgets Shiny apps occupy minimum space appear “inline” explanatory text. Consult Introduction vignette brief guide inshiny. Note inshiny currently support use Shiny’s uiOutput renderUI.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compact Inline Widgets for shiny Apps","text":"can install released version inshiny CRAN : can install development version inshiny GitHub :","code":"install.packages(\"inshiny\") # install.packages(\"devtools\") devtools::install_github(\"nicholasdavies/inshiny\")"},{"path":"https://nicholasdavies.github.io/inshiny/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Compact Inline Widgets for shiny Apps","text":"demonstrates basic features inshiny:","code":"library(inshiny) library(shiny) library(bslib)  # Shiny UI ui = page_fixed(     theme = bs_theme(version = 5, preset = \"quartz\"),      h1(\"A Tale of Two Cities by Charles Dickens\"),     h2(\"Configurable Edition\"),      inline(\"It was the year of Our Lord \",         inline_date(\"tale_date\", \"1775-07-01\"),         \". Spiritual revelations were conceded to \",         inline_select(\"tale_country\", c(\"England\", \"France\", \"Spain\")),         \" at that favoured period, as at this. \",         \"Mrs. Southcott had recently attained her \",         inline_number(\"tale_age\", 25), \"th blessed birthday, \",         \"of whom a prophetic private in the Life Guards had heralded the sublime appearance \",         \"by announcing that arrangements were made for the swallowing up of London and \",         inline_text(\"tale_borough\", \"Westminster\"), \". \",         \"Even the Cock-lane ghost had been laid only a round \",         inline_slider(\"tale_years\", 12, 2, 100), \" of years, \",         \"after rapping out its messages, as the spirits of this very year last past \",         \"(supernaturally deficient in originality) \",         inline_button(\"tale_button\", \"rapped out\"), \" theirs. \",         \"Mere messages in the earthly order of events had lately come to the \",         \"English Crown and People, from a congress of British subjects in \",         inline_switch(\"tale_usa\", FALSE, \" THE USA\", \" America\"), \": \",         \"which, strange to relate, have proved more important to the human race \",         \"than any communications yet received through any of the chickens \",         \"of the Cock-lane brood.\") )  # Shiny server server = function(input, output) { }  # Run app shinyApp(ui, server)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Container for inline widgets — inline","title":"Container for inline widgets — inline","text":"Wrapper line (paragraph) containing mix explanatory text inshiny inline widgets.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for inline widgets — inline","text":"","code":"inline(..., class = \"mb-1\")"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for inline widgets — inline","text":"... Unnamed arguments: Inline widgets (inline_text()), character strings, HTML tags appear next line paragraph. pasted together spaces , add extra spaces character strings needed. Named arguments (e.g. style) additional attributes HTML div tag wrapping line. class Extra classes apply line. default, \"mb-1\", Bootstrap 5 class adds small amount margin bottom line. can use \"mb-0\" \"mb-5\", Bootstrap 5 spacing classes, anything else. multiple classes, provide one space-separated string.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Container for inline widgets — inline","text":"HTML element included Shiny UI definition.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for inline widgets — inline","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Hello!\"),     inline(\"My name is \", inline_text(\"myname\", \"Sisyphus\"), \".\"),     inline(\"Please enter your name carefully.\", style = \"font-weight:bold\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline action button — inline_button","title":"Inline action button — inline_button","text":"button widget similar shiny::actionButton() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline action button — inline_button","text":"","code":"inline_button(id, label, icon = NULL, meaning = label, accent = NULL)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline action button — inline_button","text":"id input slot used access value. label text appearing within button. can character string HTML, NULL text (probably least want icon). icon optional shiny::icon() appear left button. meaning descriptive label, people using assistive technology screen readers. accent Bootstrap \"accent\" (\"primary\", \"danger\", etc.) used set class button (\"btn-primary\", etc.), NULL default (\"btn-default\"). See Bootstrap 5 buttons options. provide multiple accents character vector, one appended \"btn-\" added button.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline action button — inline_button","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline action button — inline_button","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"A wonderful button\"),     inline(\"To update, please feel free to press the \",         inline_button(\"mybutton\",             label = shiny::span(style = \"font-style:italic\", \"button\"),             icon = shiny::icon(\"play\"),             meaning = \"Update button\", accent = \"success\"),         \".\"     ) )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline date input with calendar — inline_date","title":"Inline date input with calendar — inline_date","text":"date input calendar pop-similar shiny::dateInput() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline date input with calendar — inline_date","text":"","code":"inline_date(   id,   value = NULL,   min = NULL,   max = NULL,   placeholder = \"Enter date\",   meaning = NULL,   format = \"yyyy-mm-dd\",   startview = \"month\",   weekstart = 0,   language = \"en\",   autoclose = TRUE,   datesdisabled = NULL,   daysofweekdisabled = NULL )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline date input with calendar — inline_date","text":"id input slot used access value. value initially selected date. Either Date object; character string \"yyyy-mm-dd\" format (calendar's display format); NULL use current date client's time zone. min, max minimum maximum allowed date. Either Date object, character string \"yyyy-mm-dd\" format, NULL limit. placeholder character string HTML element appear textbox empty, prompt. meaning descriptive label, people using assistive technology screen readers. format format date display browser; defaults \"yyyy-mm-dd\". Note display purposes. Changing display format allow specify value, min, max, datesdisabled format; stay formatted \"yyyy-mm-dd\" Date objects. See shiny::dateInput format details. startview view shown textbox first clicked. Can \"month\", default, usual monthly calendar view, \"year\", \"decade\". weekstart day start week; integer 0 (Sunday) 6 (Saturday). language language used month day names, \"en\" (English) default. See shiny::dateInput options. autoclose Whether close calendar date selected. datesdisabled Dates disabled (character Date vector). Strings \"yyyy-mm-dd\" format. daysofweekdisabled Days week disabled; integer vector 0 Sunday, 6 Saturday.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline date input with calendar — inline_date","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline date input with calendar — inline_date","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Select a date\"),     inline(\"Run simulation starting on \",         inline_date(\"start_date\", NULL, meaning = \"Simulation start date\",             format = \"dd/mm/yyyy\", daysofweekdisabled = c(0, 6)),         \" (weekdays only).\"     ) )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline action link — inline_link","title":"Inline action link — inline_link","text":"link widget similar shiny::actionLink() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline action link — inline_link","text":"","code":"inline_link(id, label, icon = NULL, meaning = label, accent = NULL)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline action link — inline_link","text":"id input slot used access value. label text appearing within link. can character string HTML, NULL text (probably least want icon). icon optional shiny::icon() appear left link. meaning descriptive label, people using assistive technology screen readers. accent Bootstrap \"accent\" (\"primary\", \"danger\", etc.) used set class link (\"link-primary\", etc.), NULL special styling. See Bootstrap 5 link utilities options. provide multiple accents character vector, one appended \"link-\" added link.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline action link — inline_link","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline action link — inline_link","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Link examples\"),     inline(\"These are \", inline_link(\"link1\", \"some\"), \" \",         inline_link(\"link2\", \"increasingly\", accent = \"danger\"), \" \",         inline_link(\"link3\", \"fancy\", accent = c(\"success\", \"underline-warning\", \"offset-2\")), \" \",         inline_link(\"link4\", \"links\", icon = shiny::icon(\"link\"), accent = \"info\"), \"!\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline number input — inline_number","title":"Inline number input — inline_number","text":"single line numeric input similar shiny::numericInput() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline number input — inline_number","text":"","code":"inline_number(   id,   value,   min = NULL,   max = NULL,   step = NULL,   default = value,   placeholder = \"Enter number\",   meaning = NULL )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline number input — inline_number","text":"id input slot used access value. value initial number. min, max Minimum maximum values. Use NULL limit. step step value incrementing decrementing number using arrow keys clickable arrows widget. Page Page keys increment decrement number 10 steps, Home End keys set number minimum maximum respectively. default step 1. default default value used input invalid empty. placeholder character string HTML element appear textbox empty, prompt. meaning descriptive label, people using assistive technology screen readers.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline number input — inline_number","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline number input — inline_number","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Breakfast app (beta)\"),     inline(\"Make me an omelette with \",         inline_number(\"eggs\", 6, min = 2, max = 12, step = 1,             placeholder = \"6 (default)\", meaning = \"Number of eggs\"),         \" eggs.\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline select list input — inline_select","title":"Inline select list input — inline_select","text":"select list input similar shiny::selectInput() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline select list input — inline_select","text":"","code":"inline_select(id, choices, selected = NULL, multiple = FALSE, meaning = NULL)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline select list input — inline_select","text":"id input slot used access value. choices Vector list values select . Provide one following: Use unnamed character vector, c(\"dog\", \"cat\", \"bee\"), basic case, list strings want user select . Use named character vector, c(\"Dog\" = \"dog\", \"Nice Kitty\" = \"cat\", \"Bee\" = \"bee\") want options displayed user (names; , Dog, Nice Kitty, Bee) differ values passed Shiny (values; , \"dog\", \"cat\", \"bee\"). Use named list, element \"sub-list\", group items headings; names top level list heading titles \"sub-lists\" items appearing heading. example, pass list(Mammals = c(\"Dog\" = \"dog\", \"Nice Kitty\" = \"cat\"), Invertebrates = c(\"Bee\" = \"bee\")) Dog Nice Kitty appear Mammals heading, Bee appear Invertebrates heading, value passed Shiny server either \"dog\", \"cat\", \"bee\". selected initially selected option's value. NULL, use first item choices. multiple Whether allow multiple selections. inshiny version 0.1.0, version inline_select multiple = TRUE looks behaves bit differently version inline_select multiple = FALSE. package authors working eliminating inconsistency. meaning descriptive label, people using assistive technology screen readers.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline select list input — inline_select","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline select list input — inline_select","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Pet registration form\"),     inline(\"My \",         inline_select(\"species\", c(\"dog\", \"cat\"), meaning = \"Pet species\"),         \"'s name is \",         inline_select(\"name\", list(\"Dog names\" = c(\"Fido\", \"Rex\"),             \"Cat names\" = c(\"Felix\", \"Boots\")), selected = \"Rex\"),         \".\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_slider.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline slider input — inline_slider","title":"Inline slider input — inline_slider","text":"numeric input slider pop-similar shiny::sliderInput() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_slider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline slider input — inline_slider","text":"","code":"inline_slider(   id,   value,   min,   max,   step = NULL,   default = value,   placeholder = \"Enter number\",   meaning = NULL )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_slider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline slider input — inline_slider","text":"id input slot used access value. value initial number. min, max Minimum maximum values. required. step step value slider use jump values min max. default default value used input invalid empty. placeholder character string HTML element appear textbox empty, prompt. meaning descriptive label, people using assistive technology screen readers.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_slider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline slider input — inline_slider","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_slider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline slider input — inline_slider","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Pep talk\"),     inline(\"When you go out there tonight, give \",         inline_slider(\"amount\", 10, 0, 110, step = 1, default = 50,             placeholder = \"Enter a percentage.\", meaning = \"Percent to give\"),         \"%.\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline on/off switch — inline_switch","title":"Inline on/off switch — inline_switch","text":"/switch widget similar bslib::input_switch() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline on/off switch — inline_switch","text":"","code":"inline_switch(id, value, on = \"On\", off = \"Off\", meaning = NULL)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline on/off switch — inline_switch","text":"id input slot used access value. value Whether switch initially ; FALSE , TRUE . , Labels appear right switch switch , respectively. can character strings HTML elements. example, can style span apply one Bootstrap 5 text color classes (see examples). NULL labels. meaning descriptive label, people using assistive technology screen readers.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline on/off switch — inline_switch","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline on/off switch — inline_switch","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Switch test\"),     inline(\"The server is now \",         inline_switch(\"myswitch\", TRUE,             on = shiny::span(class = \"text-success\", \"powered ON\"),             off = shiny::span(class = \"text-danger\", \"powered OFF\"),             meaning = \"Server power switch\"),         \".\"     ) )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline text input — inline_text","title":"Inline text input — inline_text","text":"single line text input similar shiny::textInput() can included inline() wrapper.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline text input — inline_text","text":"","code":"inline_text(id, value = \"\", placeholder = \"Enter text\", meaning = NULL)"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline text input — inline_text","text":"id input slot used access value. value initial text contents (character string). placeholder character string HTML element appear textbox empty, prompt. meaning descriptive label, people using assistive technology screen readers.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline text input — inline_text","text":"inline widget included inline() wrapper.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inline_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline text input — inline_text","text":"","code":"ui <- bslib::page_fixed(     shiny::h1(\"Hello!\"),     inline(\"My name is \", inline_text(\"myname\", \"Sisyphus\",         placeholder = \"Enter your name\", meaning = \"Your name\"), \".\") )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/inshiny-package.html","id":null,"dir":"Reference","previous_headings":"","what":"inshiny: Compact Inline Widgets for 'shiny' Apps — inshiny-package","title":"inshiny: Compact Inline Widgets for 'shiny' Apps — inshiny-package","text":"Provides basic set compact widgets 'shiny' apps occupy less space can appear inline surrounding text.","code":""},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/reference/inshiny-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"inshiny: Compact Inline Widgets for 'shiny' Apps — inshiny-package","text":"Maintainer: Nick Davies nicholas.davies@lshtm.ac.uk","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an inline widget — update_inline","title":"Update an inline widget — update_inline","text":"Use server code change parameters existing inline widget. , , parameters corresponding inline_* functions can changed. Note Shiny separate update function type widget (e.g. shiny::updateTextInput shiny::textInput, etc.), inshiny package single function update types inline widgets. function can called reactive context, can called inline_* widgets, \"built-\" Shiny widgets.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an inline widget — update_inline","text":"","code":"update_inline(   id,   session = shiny::getDefaultReactiveDomain(),   value,   placeholder,   meaning,   label,   icon,   accent,   min,   max,   step,   default,   on,   off,   datesdisabled,   daysofweekdisabled,   choices,   selected )"},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an inline widget — update_inline","text":"id id inline widget change. session currently active Shiny session. almost cases can leave default value. value (date, number, select, slider, switch, text) current value widget. placeholder (date, number, slider, text) character string HTML element appear widget's textbox empty, prompt. meaning (widgets) descriptive label people using assistive technology screen readers. label, icon (button, link) label icon appear button link. accent (button, link) Boostrap accent apply button link. min, max (date, number, slider) minimum maximum allowable value. step (number, slider) increment decrement change value. default (number, slider) default value assume input blank invalid. , (switch) Labels use switch . datesdisabled, daysofweekdisabled (date) Dates make unselectable. choices, selected (select) Options choose current selection.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an inline widget — update_inline","text":"Nothing.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update an inline widget — update_inline","text":"See documentation inline widget details parameter interpreted. adjusting min, max, datesdisabled, daysofweekdisabled, recommended also send update value current value input[[id]] new value applicable. ensure invalid value gets highlighted app invalid accounting new bounds disallowed values.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/update_inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an inline widget — update_inline","text":"","code":"# Example UI setup ui <- bslib::page_fixed(     inline(         inline_button(\"mybutton\", \"Button\"),         inline_date(\"mydate\"),         inline_link(\"mylink\", \"Link\"),         inline_number(\"mynumber\", 42),         inline_select(\"myselect\", letters),         inline_slider(\"myslider\", 42, 0, 100),         inline_switch(\"myswitch\", TRUE),         inline_text(\"mytext\")     ) )  # This covers all updatable attributes except `meaning` (all widgets) and # `placeholder` (date, number, slider, text). server <- function(input, output) {     update_inline(\"mybutton\", label = \"Click me\", icon = shiny::icon(\"recycle\"),         accent = \"info\")     update_inline(\"mydate\", value = \"2026-01-01\", min = \"2025-01-01\",         max = \"2026-12-31\", datesdisabled = \"2025-12-25\",         daysofweekdisabled = c(0, 6))     update_inline(\"mylink\", label = \"Click me\", icon = shiny::icon(\"recycle\"),         accent = \"info\")     update_inline(\"mynumber\", value = 25, min = 20, max = 50, step = 5,         default = 25)     update_inline(\"myselect\", choices = letters[1:5], selected = \"c\")     update_inline(\"myslider\", value = 25, min = 20, max = 50, step = 5,         default = 25)     update_inline(\"myswitch\", value = TRUE, on = \"Present\", off = \"Absent\")     update_inline(\"mytext\", value = \"Howdy\") }"},{"path":"https://nicholasdavies.github.io/inshiny/reference/use_inshiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually include inshiny scripts and stylesheet — use_inshiny","title":"Manually include inshiny scripts and stylesheet — use_inshiny","text":"inshiny work, need link Shiny app inshiny's JavaScript code CSS stylesheets. use inshiny's function inline() anywhere Shiny UI definition, probably , happens automatically. Otherwise, can add call use_inshiny() UI.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/use_inshiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually include inshiny scripts and stylesheet — use_inshiny","text":"","code":"use_inshiny()"},{"path":"https://nicholasdavies.github.io/inshiny/reference/use_inshiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually include inshiny scripts and stylesheet — use_inshiny","text":"htmltools::htmlDependency() object include UI.","code":""},{"path":"https://nicholasdavies.github.io/inshiny/reference/use_inshiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually include inshiny scripts and stylesheet — use_inshiny","text":"","code":"ui <- bslib::page(     use_inshiny(),     shiny::h1(\"My slider app\"),     inline_slider(\"slider\", 50, 0, 100) )"},{"path":[]},{"path":"https://nicholasdavies.github.io/inshiny/news/index.html","id":"inshiny-010","dir":"Changelog","previous_headings":"","what":"inshiny 0.1.0","title":"inshiny 0.1.0","text":"CRAN release: 2025-09-09 Initial CRAN submission.","code":""}]
